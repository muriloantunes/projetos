{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;IAAMA,a;AACJ,yBAAYC,UAAZ,EAAwB;AAAA;;AACtB,SAAKC,WAAL,GAAmBD,UAAnB;AACA,SAAKE,MAAL,GAAc,aAAd;AACD;;;;6BAEQC,U,EAAY;AAAA;;AACnB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAIC,UAAU,MAAKN,WAAL,CACXO,WADW,CACC,CAAC,MAAKN,MAAN,CADD,EACgB,WADhB,EAEXO,WAFW,CAEC,MAAKP,MAFN,EAGXQ,GAHW,CAGPP,UAHO,CAAd;;AAKAI,gBAAQI,SAAR,GAAoB,aAAK;AACvBN;AACD,SAFD;;AAIAE,gBAAQK,OAAR,GAAkB,aAAK;AACrBC,kBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,iBAAO,0CAAP;AACD,SAHD;AAID,OAdM,CAAP;AAeD;;;iCAEY;AAAA;;AACX,aAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAIY,SAAS,OAAKjB,WAAL,CACVO,WADU,CACE,CAAC,OAAKN,MAAN,CADF,EACiB,WADjB,EAEVO,WAFU,CAEE,OAAKP,MAFP,EAGViB,UAHU,EAAb;AAIA,YAAIC,cAAc,EAAlB;;AAEAF,eAAOP,SAAP,GAAmB,aAAK;AACtB,cAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,cAAID,KAAJ,EAAW;AACT,gBAAIE,OAAOF,MAAMG,KAAjB;AACAJ,wBAAYK,IAAZ,CACE,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CADF;AAGAR,kBAAMS,QAAN;AACD,WAND,MAMO;AACLzB,oBAAQe,WAAR;AACD;AACF,SAZD;;AAcAF,eAAON,OAAP,GAAiB,aAAK;AACpBC,kBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,iBAAO,yCAAP;AACD,SAHD;AAID,OAzBM,CAAP;AA0BC;;;iCAEa;AAAA;;AACV,aAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,YAAIC,UAAU,OAAKN,WAAL,CACbO,WADa,CACD,CAAC,OAAKN,MAAN,CADC,EACc,WADd,EAEbO,WAFa,CAED,OAAKP,MAFJ,EAGT6B,KAHS,EAAd;;AAKAxB,gBAAQI,SAAR,GAAoB;AAAA,iBAAKN,QAAQ,mCAAR,CAAL;AAAA,SAApB;;AAEAE,gBAAQK,OAAR,GAAkB,aAAK;AACnBC,kBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,iBAAO,yCAAP;AACH,SAHD;AAIH,OAZM,CAAP;AAaH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\r\n  constructor(connection) {\r\n    this._connection = connection\r\n    this._store = 'negociacoes'\r\n  }\r\n\r\n  adiciona(negociacao) {\r\n    return new Promise((resolve, reject) => {\r\n      let request = this._connection\r\n        .transaction([this._store], 'readwrite')\r\n        .objectStore(this._store)\r\n        .add(negociacao)\r\n\r\n      request.onsuccess = e => {\r\n        resolve()\r\n      }\r\n\r\n      request.onerror = e => {\r\n        console.log(e.target.error)\r\n        reject('Não foi possível adicionar a negociação.')\r\n      }\r\n    })\r\n  }\r\n\r\n  listaTodos() {\r\n    return new Promise((resolve, reject) => {\r\n      let cursor = this._connection\r\n        .transaction([this._store], 'readwrite')\r\n        .objectStore(this._store)\r\n        .openCursor()\r\n      let negociacoes = []\r\n\r\n      cursor.onsuccess = e => {\r\n        let atual = e.target.result\r\n\r\n        if (atual) {\r\n          let dado = atual.value\r\n          negociacoes.push(\r\n            new Negociacao(dado._data, dado._quantidade, dado._valor)\r\n          )\r\n          atual.continue()\r\n        } else {\r\n          resolve(negociacoes)\r\n        }\r\n      }\r\n\r\n      cursor.onerror = e => {\r\n        console.log(e.target.error)\r\n        reject('Não foi possível listar as negociações.')\r\n      }\r\n    })\r\n    }\r\n  \r\n    apagaTodos () {\r\n        return new Promise((resolve, reject) => { \r\n            let request = this._connection\r\n            .transaction([this._store], 'readwrite')\r\n            .objectStore(this._store)\r\n                .clear()\r\n            \r\n            request.onsuccess = e => resolve('Negociações apagadas com sucesso!')\r\n                \r\n            request.onerror = e => {\r\n                console.log(e.target.error)\r\n                reject('Não foi possível apagar as negociações.')\r\n            } \r\n        })\r\n    }\r\n}\r\n"]}