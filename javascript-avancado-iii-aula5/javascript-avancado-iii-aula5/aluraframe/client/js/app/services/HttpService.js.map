{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;IAAMA,W;;;;;;;kCACUC,G,EAAK;AACjB,UAAI,CAACA,IAAIC,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACb,aAAOH,GAAP;AACD;;;wBAEGI,G,EAAK;AAAA;;AACP,aAAOC,MAAMD,GAAN,EACJE,IADI,CACC;AAAA,eAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,OADD,EAEJM,IAFI,CAEC;AAAA,eAAON,IAAIQ,IAAJ,EAAP;AAAA,OAFD,CAAP;AAGD;;;yBAEIJ,G,EAAKK,I,EAAM;AAAA;;AACd,aAAOJ,MAAMD,GAAN,EAAW;AAChBM,iBAAS,EAAE,gBAAgB,kBAAlB,EADO;AAEhBC,gBAAQ,MAFQ;AAGhBC,cAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHU,OAAX,EAKRH,IALQ,CAKH;AAAA,eAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,OALG,CAAP;AAMD","file":"HttpService.js","sourcesContent":["class HttpService {\r\n  _handleErrors(res) {\r\n    if (!res.ok) throw new Error(res.statusText)\r\n    return res\r\n  }\r\n\r\n  get(url) {\r\n    return fetch(url)\r\n      .then(res => this._handleErrors(res))\r\n      .then(res => res.json())\r\n  }\r\n\r\n  post(url, dado) {\r\n    return fetch(url, {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      method: 'post',\r\n      body: JSON.stringify(dado)\r\n  })\r\n  .then(res => this._handleErrors(res))\r\n  }\r\n}\r\n"]}